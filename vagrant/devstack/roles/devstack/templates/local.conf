[[local|localrc]]
ADMIN_PASSWORD="{{ admin_password }}"
MYSQL_PASSWORD="{{ mysql_password }}"
RABBIT_PASSWORD="{{ rabbit_password }}"
SERVICE_PASSWORD="{{ service_password }}"
SERVICE_TOKEN="{{ service_token }}"
#HOST_IP=8.8.8.8
#OFFLINE=True
#RECLONE=yes
#PIP_UPGRADE=True
#USE_VENV=True
GIT_BASE="{{ git_base }}"
#GIT_BASE=https://github.com


SERVICE_TIMEOUT=180
API_WORKERS=1

#DEST=$HOME/stack
#DATA_DIR=$HOME/data
LOGFILE=$DEST/logs/stack.sh.log
LOGDAYS=2
LOG_COLOR=True
VERBOSE=True

REGION_NAME=RegionOne
KEYSTONE_TOKEN_FORMAT=UUID

# Configuration for Region2
#REGION_NAME=RegionTwo
#KEYSTONE_SERVICE_HOST=8.8.8.8
#KEYSTONE_AUTH_HOST=8.8.8.8

OS_BRANCH="{{ os_branch }}"
#NOVA_BRANCH=stable/kilo
#CINDER_BRANCH=stable/kilo
#GLANCE_BRANCH=stable/kilo
#HORIZON_BRANCH=stable/kilo
#KEYSTONE_BRANCH=stable/kilo
#NEUTRON_BRANCH=stable/kilo
#HEAT_BRANCH=stable/kilo
#SWIFT_BRANCH=stable/kilo

# Nova services
LIBVIRT_TYPE="{{ libvirt_type }}"

# Cinder services
VOLUME_GROUP="stack-volumes"
VOLUME_NAME_PREFIX="volume-"
VOLUME_BACKING_FILE_SIZE=10G

# Swift services
SWIFT_HASH=66a3d6b56c1f479c8b4e70ab5c2000f5
SWIFT_REPLICAS=1
SWIFT_DATA_DIR=$DEST/data
SWIFT_LOOPBACK_DISK_SIZE=10G
enable_service s-proxy s-object s-container s-account c-bak

# Neutron services
#IP_VERSION=4+6
#Q_USE_SECGROUP=True
#ENABLE_TENANT_TUNNELS=True
#ENABLE_TENANT_VLANS=True
#TENANT_VLAN_RANGE=3001:4000
#PHYSICAL_NETWORK=default
#OVS_PHYSICAL_BRIDGE=br-ex
#Q_USE_PROVIDER_NETWORKING=True
disable_service n-net
enable_service q-svc q-agt q-dhcp q-l3 q-meta neutron

{% if lbaas | bool %}
# LBaaSv2
enable_plugin neutron-lbaas https://github.com/openstack/neutron-lbaas.git $OS_BRANCH
enable_plugin octavia https://github.com/openstack/octavia.git $OS_BRANCH
{% if horizon | bool %}
# LBaaS Dashboard
enable_plugin neutron-lbaas-dashboard https://git.openstack.org/openstack/neutron-lbaas-dashboard $OS_BRANCH
{% endif %}
enable_service q-lbaasv2
enable_service octavia o-cw o-hk o-hm o-api
{% endif %}

{% if not (horizon | bool) %}
# Horizon
disable_service horizon
{% endif %}

{% if not (tempest | bool) %}
# Tempest
disable_service tempest
{% endif %}

{% if (heat | bool) %}
# Heat services
LIBS_FROM_GIT+=',python-heatclient'
{% if os_branch == "master" %}
enable_plugin heat https://git.openstack.org/openstack/heat $OS_BRANCH
{% elif os_branch == "stable/mitaka" %}
HEAT_ENABLE_ADOPT_ABANDON=True
enable_service heat h-api h-api-cfn h-api-cw h-eng
{% endif %}
{% endif %}

{% if (ceilometer | bool) %}
# Ceilometer services
CEILOMETER_BACKEND=mongodb
CEILOMETER_PIPELINE_INTERVAL=600
enable_plugin ceilometer https://git.openstack.org/openstack/ceilometer $OS_BRANCH
{% endif %}

{% if (aodh | bool) %}
# Enable the aodh alarming services
enable_plugin aodh https://git.openstack.org/openstack/aodh $OS_BRANCH
{% endif %}

{% if (gnocchi | bool) %}
# Enable gnocchi services
enable_plugin gnocchi https://git.openstack.org/openstack/gnocchi $OS_BRANCH
{% endif %}

{% if (sahara | bool) %}
# Sahara services
enable_plugin sahara https://git.openstack.org/openstack/sahara $OS_BRANCH
{% endif %}

{% if (zaqar | bool) %}
# Zaqar service
enable_plugin zaqar https://git.openstack.org/openstack/zaqar $OS_BRANCH
{% endif %}

{% if (senlin | bool) %}
# Senlin service
enable_plugin senlin https://git.openstack.org/openstack/senlin $OS_BRANCH
LIBS_FROM_GIT+=',python-senlinclient'
{% endif %}

{% if (magnum | bool) %}
# Magnum service
enable_plugin magnum https://git.openstack.org/openstack/magnum $OS_BRANCH
{% endif %}

{% if (murano | bool) %}
# Murano service
enable_plugin murano https://git.openstack.org/openstack/murano $OS_BRANCH
{% endif %}

{% if (barbican | bool) %}
# Barbican service
enable_plugin barbican https://git.openstack.org/openstack/barbican $OS_BRANCH
{% endif %}

[[post-config|$NOVA_CONF]]
[DEFAULT]
osapi_compute_workers=1
ec2_workers=1
metadata_workers=1
[conductor]
workers=1

[[post-config|$NEUTRON_CONF]]
[DEFAULT]
api_workers=1

{% if heat | bool %}
[[post-config|$HEAT_CONF]]
[DEFAULT]
num_engine_workers=1
[heat_api]
workers=1
[heat_api_cfn]
workers=1
[heat_api_cloudwatch]
workers=1
{% endif %}