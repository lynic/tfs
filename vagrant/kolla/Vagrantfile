# -*- mode: ruby -*-
# vi: set ft=ruby :

require "vagrant-vsphere"
require 'yaml'

configs = YAML.load_file("#{Dir.home}/.vagrant.d/vsphere.yaml")

Vagrant.configure("2") do |config|
  config.vm.box = "dummy"
  config.ssh.username = configs['ssh']['user']
  config.ssh.password = configs['ssh']['password']
  config.ssh.keys_only = false

  config.vm.provider :vsphere do |vsphere|
    vsphere.host = configs['vsphere']['vcenter']
    vsphere.user = configs['vsphere']['user']
    vsphere.password = configs['vsphere']['password']
    vsphere.insecure = true
    vsphere.data_center_name = "Datacenter"
    vsphere.compute_resource_name = 'Cluster1'
    # vsphere.resource_pool_name = 'vagrant'
    vsphere.data_store_name = 'datastore1'

    vsphere.template_name = "Templates/CentOS7-Server"
    vsphere.vm_base_path = "vagrant-machines"
    # vsphere.clone_from_vm = true
    vsphere.linked_clone = true

    vsphere.ssh_cidr = '172.20.1.0/24'
    vsphere.ip_address_timeout = 600
  end

  # Boot controller
  CON = 3
  (0..CON-1).each do |i|
    vm_name = "kolla-controller-#{i}"
    config.vm.define vm_name do |n|
      n.vm.hostname = vm_name
      n.vm.provider :vsphere do |vsphere|
        vsphere.name = vm_name
        vsphere.memory_mb = 6192
        vsphere.cpu_count = 4
        vsphere.networks = [
          {'network': 'DPortGroup_VPN' },
          {'network': 'Dummy' }
        ]
      end
    end
  end

  # Boot compute
  COM = 1
  (0..COM-1).each do |i|
    vm_name = "kolla-compute-#{i}"
    config.vm.define vm_name do |n|
      n.vm.hostname = vm_name
      n.vm.provider :vsphere do |vsphere|
        vsphere.name = vm_name
        vsphere.memory_mb = 4096
        vsphere.cpu_count = 4
        vsphere.networks = [
          {'network': 'DPortGroup_VPN' },
          {'network': 'Dummy' }
        ]
      end
    end
  end

  # Boot storage
  STO = 1
  (0..STO-1).each do |i|
    config.vm.define "kolla-storage-#{i}" do |n|
      n.vm.hostname = "kolla-storage-#{i}"
      n.vm.provider :vsphere do |vsphere|
        vsphere.name = "kolla-storage-#{i}"
        vsphere.memory_mb = 2048
        vsphere.cpu_count = 2
        vsphere.networks = [
          {'network': 'DPortGroup_VPN' },
          {'network': 'Dummy' }
        ]
      end
    end
  end

  # Boot network
  NET = 1
  (0..NET-1).each do |i|
    vm_name = "kolla-network-#{i}"
    config.vm.define vm_name do |n|
      n.vm.hostname = vm_name
      n.vm.provider :vsphere do |vsphere|
        vsphere.name = vm_name
        vsphere.memory_mb = 2048
        vsphere.cpu_count = 2
        vsphere.networks = [
          {'network': 'DPortGroup_VPN' },
          {'network': 'Dummy' },
          {'network': 'DPortGroup_VPN'}
        ]
      end
    end
  end

  # Boot ansible
  vm_name = 'kolla-ansible-0'
  config.vm.define vm_name do |n|
    n.vm.hostname = vm_name
    n.vm.provider :vsphere do |vsphere|
      vsphere.name = vm_name
      vsphere.memory_mb = 2048
      vsphere.cpu_count = 2
      vsphere.networks = [
          {'network': 'DPortGroup_VPN' }
        ]
    end
    n.vm.provision :ansible do |ansible|
        ansible.verbose = true
        ansible.limit = "all"
        ansible.galaxy_roles_path = "../../ansible/roles/"
        ansible.groups = {
          "control" => (0..CON-1).map {|j| "kolla-controller-#{j}"},
          "compute" => (0..COM-1).map {|j| "kolla-compute-#{j}"},
          "storage" => (0..STO-1).map {|j| "kolla-storage-#{j}"},
          "network" => (0..NET-1).map {|j| "kolla-network-#{j}"},
          "ansible" => vm_name,
        }
        ansible.playbook = "site.yml"
        ansible.extra_vars = {
          "kolla_ansible_user": configs['ssh']['user'],
          "kolla_ansible_password": configs['ssh']['password']
        }
    end
  end
end