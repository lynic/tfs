# -*- mode: ruby -*-
# vi: set ft=ruby :

require "vagrant-vsphere"
require 'yaml'

configs = YAML.load_file("#{Dir.home}/.vagrant.d/vsphere.yaml")

Vagrant.configure("2") do |config|
  config.vm.box = "dummy"
  config.ssh.username = configs['ssh']['user']
  config.ssh.password = configs['ssh']['password']
  config.ssh.keys_only = false

  config.vm.provider :vsphere do |vsphere|
    vsphere.host = configs['vsphere']['vcenter']
    vsphere.user = configs['vsphere']['user']
    vsphere.password = configs['vsphere']['password']
    vsphere.insecure = true
    vsphere.data_center_name = "Datacenter"
    vsphere.compute_resource_name = 'Cluster1'
    # vsphere.resource_pool_name = 'vagrant'
    vsphere.data_store_name = 'datastore1'

    # vsphere.name = "kube-#{i}"
    vsphere.template_name = "Templates/CentOS7-Server"
    vsphere.vm_base_path = "vagrant-machines"
    # vsphere.clone_from_vm = true
    vsphere.linked_clone = true

    # vsphere.memory_mb = 4096
    # vsphere.cpu_count = 4
    vsphere.vlan = 'DPortGroup_VPN'
    vsphere.real_nic_ip = true
  end

  N = 2

  (0..N).each do |i|
    config.vm.define "etcd-#{i}" do |n|
      n.vm.hostname = "etcd-#{i}"
      n.vm.provider :vsphere do |vsphere|
        vsphere.name = "etcd-#{i}"
        vsphere.memory_mb = 1024
        vsphere.cpu_count = 1
      end
      if i == N
        n.vm.provision :ansible do |ansible|
          ansible.verbose = true
          ansible.limit = "all"
          ansible.galaxy_roles_path = "../../ansible/roles/"
          ansible.groups = {
            "etcd" => (0..N).map {|j| "etcd-#{j}"}
          }
          ansible.playbook = "site.yml"
        end
      end
    end
  end
end